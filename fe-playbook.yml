- name: Show Docker Compose Running Status
  hosts: all
  become: true
  become_user: root
  vars:
    docker_compose_dir: /home/ubuntu
    secret_name: prod/rdsuser/a11yvillage
    secret_region: ap-northeast-1
  collections:
    - community.docker
    - community.aws
  tasks:

    - name: Set ansible_python_interpreter to use the installed Python
      set_fact:
        ansible_python_interpreter: /usr/bin/python3

    - name: Update apt repo and cache on all Debian/Ubuntu boxes
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
      become: true

    - name: Upgrade all apt packages
      apt: upgrade=yes force_apt_get=yes
      become: true

    - name: Install Python pip
      apt: name={{ item }} update_cache=true state=present force_apt_get=yes
      with_items:
        - python3-pip
      become: true

    - name: Install Python packages using apt
      apt:
        name:
          - python3-docker
          - python3-boto3
          - python3-botocore
        state: present
        update_cache: yes
      become: true

    - name: Install Docker dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
        update_cache: yes
      become: true

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: true

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
      become: true

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes
      become: true

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes
      become: true

    - name: Create .env file
      copy:
        dest: "{{ docker_compose_dir }}/.env"
        content: |
          NEXT_PUBLIC_API_URL=https://a11yvillage.coseeing.org/
          NEXT_PUBLIC_RESOURCE_URL=https://a11yvillage.s3.ap-northeast-1.amazonaws.com/

    - name: Copy docker-compose.yml Document
      copy:
        dest: "{{ docker_compose_dir }}/docker-compose.yml"
        content: |
          services:
            a11yvillage-web:
              container_name: a11yvillage-web
              image: 622913514517.dkr.ecr.ap-northeast-1.amazonaws.com/a11yvillage-server:latest
              restart: always
              network_mode: "host"
              environment:
                - NEXT_PUBLIC_API_URL=https://a11yvillage.coseeing.org/
                - NEXT_PUBLIC_RESOURCE_URL=https://a11yvillage.s3.ap-northeast-1.amazonaws.com/

    - name: Update the repository cache and update package "unzip" to latest version using default
      apt:
        name: unzip
        state: latest
        update_cache: yes

    - name: Install AWS CLI v2
      shell: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/tmp/awscliv2.zip"
        unzip /tmp/awscliv2.zip -d /tmp
        sudo /tmp/aws/install
        rm -f /tmp/awscliv2.zip
        rm -rf /tmp/aws
      args:
        creates: /usr/local/bin/aws

    - name: Login ECR using AWS CLI
      shell: |
        aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 622913514517.dkr.ecr.ap-northeast-1.amazonaws.com
      register: ecr_login
      no_log: false

    - name: Run
      docker_compose_v2:
        project_src: "{{ docker_compose_dir }}"
        state: present
      register: compose_result

    - name: Show compose_result Detail info
      debug:
        var: compose_result
